--[[
  _____  _____       _______                  
 |  __ \|  __ \   /\|__   __|                 
 | |__) | |  | | /  \  | | ___ _ __ _ __ ___  
 |  ___/| |  | |/ /\ \ | |/ _ \ '__| '_ ` _ \ 
 | |    | |__| / ____ \| |  __/ |  | | | | | |
 |_|    |_____/_/    \_\_|\___|_|  |_| |_| |_|

--]]

local userId = {}
local phoneNumbers = {}

local msgSource = {}
local msgTarget = {}
local msgContent = {}


local function receiveFrom(user)
	while true do
		id, msg = rednet.receive()
		
		if (tostring(id) == tostring(user)) then
			return msg
		end
	end
end

--[[

    userExists(int userID):
        returns true if the given userID exists
        in the userId list

        returns false otherwise

--]]
local function userExists(curUserID) 
    for i = 1, table.getn(userId) do
        if (userId[i] == curUserID) then
            return true
        end
    end

    return false
end

--[[
    
    sendMessage(int src, int tar, string message):
        sends a message from the userID 'src' to the
        userID 'tar'

        returns true if the message is sent
		
		returns false otherwise
--]]
local function sendMessage(src, tar, message)
    if (not userExists(src)) then
        return false
    end

    if (not userExists(tar)) then
        return false
    end

	table.insert(msgSource, src)
	table.insert(msgTarget, tar)
	table.insert(msgContent, message)

    return true
end

--[[
	pullMessages(int curUserID):
		returns a list of the user's messages
		
		returns nil if the user does not exist
--]]

local function pullMessages(curUserID)
    if (not userExists(curUserID)) then
        return nil
    end

    local userMsgSource = {}
	local userMsgContent = {}
	
	for i = 1, table.getn(msgSource) do
		if (tostring(msgTarget[i]) == tostring(curUserID)) then
			table.insert(userMsgSource, msgSource[i])
			table.insert(userMsgContent, msgContent[i])
		end
	end
	
	return {textutils.serialize(usrMsgSource), 
			textutils.serialize(userMsgContent)}
end

--[[

    pullMessageCount(int curUserID):
        returns the number of messages subjected to 
        the given user by ID

        returns -1 if the user does not exists

--]]
local function pullMessageCount(curUserID)
    if (not userExists(curUserID)) then
        return -1
    end

    local messageCnt = 0

    for i = 1, table.getn(msgSource) do
        if (tostring(msgTarget[i]) == tostring(curUserID)) then
            messageCnt = messageCnt + 1
        end
    end

    return messageCnt
end

local function main()
	while true do
		id, msg = rednet.receive()
		
		if (msg == "$REGISTER") then
			table.insert(userId, id);
			print("User registered: " .. id)
		end
		
		if (msg == "$SEND") then
			local msgTar = tostring(receiveFrom(id))
			local msgContent = tostring(receiveFrom(id))
            
            print("Sending message...")
			print("From: " .. id)
			print("To:   " .. msgTar)
			print("Cont: " .. msgContent)
			
			if (sendMessage(id, msgTar, msgContent)) then
                print("Successful")
            else
                print("Unsuccessful")
            end
		end
		
		if (msg == "$RECEIVE") then
			local messages = pullMessages(id)
            print("Pulling messages from user id " .. id)
            print("There are " .. pullMessageCount(id) .. " messages. ")
			
            print("Messages Object: ")
            print(textutils.serialize(messages))

            rednet.send(id, textutils.serialize(messages))
		end
	end
end

main()
