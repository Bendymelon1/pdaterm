--[[
  _____  _____       _______                  
 |  __ \|  __ \   /\|__   __|                 
 | |__) | |  | | /  \  | | ___ _ __ _ __ ___  
 |  ___/| |  | |/ /\ \ | |/ _ \ '__| '_ ` _ \ 
 | |    | |__| / ____ \| |  __/ |  | | | | | |
 |_|    |_____/_/    \_\_|\___|_|  |_| |_| |_|

--]]

--testing git

--Variables
--Initializes the info files
local servFile = fs.open("/services", "r")
local userFile = fs.open("/users", "r")
local phoneNumFile = fs.open("/pnums", "r")
local mailFile = fs.open("/mail", "r")

local userID = {}
local phoneNumbers = {}
local mailDatabase = {}
local services = {}

local logFile = fs.open("/logs", "a")

local serverName = "MCNET";

local function log(msgType, message)
    print ("[" .. msgType .. "]\t" .. message);
    logFile.writeLine("[" .. msgType .. "]\t" .. message)
end

local function loadUserInfo()
    log("INFO", "Loading user info...")

	totalUserCount = userFile.readLine()
    log("INFO", "Detected " .. totalUserCount .. " user files. ")
    
	for line2 = 1, totalUserCount do
        curUserID = userFile.readLine()
        curUserPhone = phoneNumFile.readLine()

        table.insert(userID, curUserId)
        table.insert(phoneNumbers, curUserPhone)

        log("INFO", "Loaded user id " .. curUserID)
	end
end

local function writeUserInfo()
    log("INFO", "Writing user info...")

    --Clears the data file and write the data in the array
    --to the data file
end

local function loadServices(){
    --TODO: 69
}

--Creates and verifies a new phone number
local function generatePhoneNum()
    math.randomseed(os.time())

    while true do
        number = math.random(1000, 9999)
        --indicates if the current generated number is used
        flag = false; 

        for i = 1, table.getn(phoneNumbers) do
            if (phoneNumbers[i] == number) then
                flag = true
            end
        end

        if (not flag) return number
    end
end

--Opens rednet on the first side
local function openRednet()
	local listOfSides = rs.getSides()
	local listofPossibles = {}
	c1 = 0
	for c1 = 1,6 do
		if (peripheral.isPresent(tostring(listOfSides[c1])) 
            and peripheral.getType(listOfSides[c1]) == "modem") then

            table.insert(listofPossibles,tostring(listOfSides[c1]))
		end

		if c1 == 6 and table.maxn(listofPossibles) == 0 then
			print("No Modem Detected!")
			return nil
		end

		if c1 == 6 and table.maxn(listofPossibles) ~= 0 then
			rednet.open(listofPossibles[1])
			return listofPossibles[1]
		end
	end
end

-- Function to check if all files exist
local function chkfiles()
    log("INFO", "Checking files...")

    if (not fs.exists("/services") then
        log("WARN", "/services not found. downloading.")
        shell.run("pastebin get SQvMcfK0 services")
    end

    if (not fs.exists("/users") then
        log("WARN", "/users not found. downloading.")
        shell.run("pastebin get SQvMcfK0 users")
    end

    if (not fs.exists("/mail")) then
        log("WARN", "/mail not found. downloading.")
        shell.run("pastebin get SQvMcfK0 mail")
    end

    if(not fs.exists(/"userids")) then
        log("WARN", "/userids not found. downloading.")
        shell.run("pastebin get SQvMcfK0 userids")
    end

    if (not fs.exists("/pnums")) then
        log("WARN", "/pnums not found. downloading.")
        shell.run("pastebin get SQvMcfK0 pnums")
    end

    return true
end

function main()
    chkFiles()
    openRednet()
    readUserFiles()

    while true do
        id, msg = rednet.receive()

        if (msg == "$SERVICES") then
            --TODO: Handle services
        end

        if (msg == "$REGISTER") then
            --Check if the current user is already registered

            --If so, generate a new phone number

            --Return the phone number and add to records
        end
    end
end
